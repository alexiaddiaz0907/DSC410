{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNpBuygWLkAooPdbisu0YzO",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/alexiaddiaz0907/DSC410/blob/master/DSC410_Week7\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Within the GitHub for Week 7, you’ll find a data set named eda_classification.csv. This data set contains both continuous and categorical variables and the target is binary (0 or 1). Build a model that predicts ‘y’ (i.e., the column labeled ‘y’). Note that you’ll need to consider EDA and feature engineering to do this. Be sure to review the feature engineering article from Week 3.\n",
        "You're welcome to try and calculate an appropriate evaluation metric, although it's not required since we won't cover that until next week. Note that the model will not perform well, the data is not build for making predictions, it's built for you to perform EDA on categorical data."
      ],
      "metadata": {
        "id": "OWCNjRlK9EWs"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        " \n",
        "import pandas as pd\n",
        "\n",
        "url = \"https://raw.githubusercontent.com/bellevue-university/dsc410/main/12%20Week/week_7/eda_classification.csv\"\n",
        "df = pd.read_csv(url)\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "ff1cMul_9Chw",
        "outputId": "611ac065-46c5-41dd-c7a8-b12bee5c0cbf"
      },
      "execution_count": 172,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          x0    x1         x2         x3        x4         x5         x6  \\\n",
              "0 -17.933519   Jun   6.559220 -14.452810 -4.732855   0.381673   2.563194   \n",
              "1 -37.214754  July  10.774930 -15.384004 -0.077339  10.983774 -15.210206   \n",
              "2   0.330441   Aug -19.609972  -9.167911  2.064124  12.071688  12.506141   \n",
              "3 -13.709765   Aug  -8.011390   6.759264  1.727615  -1.768382  24.039733   \n",
              "4  -4.202598   May   7.076210 -26.004919 -4.269696  -3.414224   2.115989   \n",
              "\n",
              "            x7          x8         x9        x10     x11       x12     x13  \\\n",
              "0  ($1,306.52)  -89.394348 -28.454044 -16.201298  -0.01%  0.217010   tesla   \n",
              "1     ($24.86)  153.032652 -32.557736  69.675903   0.00% -3.584908  Toyota   \n",
              "2    ($110.85) -141.437276 -20.794952  55.042604   0.00% -3.991366     bmw   \n",
              "3    ($324.43)   51.039653  -7.046908 -31.424419   0.01%  7.908897  Toyota   \n",
              "4   $1,213.37   -31.046700  19.061182 -31.525515  -0.01%  0.846719   Honda   \n",
              "\n",
              "         x14        x15       x16    x17  y  \n",
              "0    thurday   9.729891 -0.786431  small  1  \n",
              "1       thur  35.727926 -0.985552  small  0  \n",
              "2  wednesday  -9.283523 -3.394718  small  1  \n",
              "3        wed  -2.891882 -2.690222  small  0  \n",
              "4  wednesday  25.497480  3.516801  small  1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-adad7582-dff7-4cd0-870c-25fe70364c14\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>x0</th>\n",
              "      <th>x1</th>\n",
              "      <th>x2</th>\n",
              "      <th>x3</th>\n",
              "      <th>x4</th>\n",
              "      <th>x5</th>\n",
              "      <th>x6</th>\n",
              "      <th>x7</th>\n",
              "      <th>x8</th>\n",
              "      <th>x9</th>\n",
              "      <th>x10</th>\n",
              "      <th>x11</th>\n",
              "      <th>x12</th>\n",
              "      <th>x13</th>\n",
              "      <th>x14</th>\n",
              "      <th>x15</th>\n",
              "      <th>x16</th>\n",
              "      <th>x17</th>\n",
              "      <th>y</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-17.933519</td>\n",
              "      <td>Jun</td>\n",
              "      <td>6.559220</td>\n",
              "      <td>-14.452810</td>\n",
              "      <td>-4.732855</td>\n",
              "      <td>0.381673</td>\n",
              "      <td>2.563194</td>\n",
              "      <td>($1,306.52)</td>\n",
              "      <td>-89.394348</td>\n",
              "      <td>-28.454044</td>\n",
              "      <td>-16.201298</td>\n",
              "      <td>-0.01%</td>\n",
              "      <td>0.217010</td>\n",
              "      <td>tesla</td>\n",
              "      <td>thurday</td>\n",
              "      <td>9.729891</td>\n",
              "      <td>-0.786431</td>\n",
              "      <td>small</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-37.214754</td>\n",
              "      <td>July</td>\n",
              "      <td>10.774930</td>\n",
              "      <td>-15.384004</td>\n",
              "      <td>-0.077339</td>\n",
              "      <td>10.983774</td>\n",
              "      <td>-15.210206</td>\n",
              "      <td>($24.86)</td>\n",
              "      <td>153.032652</td>\n",
              "      <td>-32.557736</td>\n",
              "      <td>69.675903</td>\n",
              "      <td>0.00%</td>\n",
              "      <td>-3.584908</td>\n",
              "      <td>Toyota</td>\n",
              "      <td>thur</td>\n",
              "      <td>35.727926</td>\n",
              "      <td>-0.985552</td>\n",
              "      <td>small</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.330441</td>\n",
              "      <td>Aug</td>\n",
              "      <td>-19.609972</td>\n",
              "      <td>-9.167911</td>\n",
              "      <td>2.064124</td>\n",
              "      <td>12.071688</td>\n",
              "      <td>12.506141</td>\n",
              "      <td>($110.85)</td>\n",
              "      <td>-141.437276</td>\n",
              "      <td>-20.794952</td>\n",
              "      <td>55.042604</td>\n",
              "      <td>0.00%</td>\n",
              "      <td>-3.991366</td>\n",
              "      <td>bmw</td>\n",
              "      <td>wednesday</td>\n",
              "      <td>-9.283523</td>\n",
              "      <td>-3.394718</td>\n",
              "      <td>small</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-13.709765</td>\n",
              "      <td>Aug</td>\n",
              "      <td>-8.011390</td>\n",
              "      <td>6.759264</td>\n",
              "      <td>1.727615</td>\n",
              "      <td>-1.768382</td>\n",
              "      <td>24.039733</td>\n",
              "      <td>($324.43)</td>\n",
              "      <td>51.039653</td>\n",
              "      <td>-7.046908</td>\n",
              "      <td>-31.424419</td>\n",
              "      <td>0.01%</td>\n",
              "      <td>7.908897</td>\n",
              "      <td>Toyota</td>\n",
              "      <td>wed</td>\n",
              "      <td>-2.891882</td>\n",
              "      <td>-2.690222</td>\n",
              "      <td>small</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-4.202598</td>\n",
              "      <td>May</td>\n",
              "      <td>7.076210</td>\n",
              "      <td>-26.004919</td>\n",
              "      <td>-4.269696</td>\n",
              "      <td>-3.414224</td>\n",
              "      <td>2.115989</td>\n",
              "      <td>$1,213.37</td>\n",
              "      <td>-31.046700</td>\n",
              "      <td>19.061182</td>\n",
              "      <td>-31.525515</td>\n",
              "      <td>-0.01%</td>\n",
              "      <td>0.846719</td>\n",
              "      <td>Honda</td>\n",
              "      <td>wednesday</td>\n",
              "      <td>25.497480</td>\n",
              "      <td>3.516801</td>\n",
              "      <td>small</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-adad7582-dff7-4cd0-870c-25fe70364c14')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-adad7582-dff7-4cd0-870c-25fe70364c14 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-adad7582-dff7-4cd0-870c-25fe70364c14');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 172
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **EDA and Feature Engineering **"
      ],
      "metadata": {
        "id": "MO30kA2CeIHE"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "df.shape\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QRvvptwb9sWd",
        "outputId": "7a6fe5af-4671-4d7c-b065-42445be61e75"
      },
      "execution_count": 173,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(9999, 19)"
            ]
          },
          "metadata": {},
          "execution_count": 173
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df.info())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dSyX1GShFNh8",
        "outputId": "24e39b2f-b8ae-4893-f4f8-c16570bfac5c"
      },
      "execution_count": 174,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 9999 entries, 0 to 9998\n",
            "Data columns (total 19 columns):\n",
            " #   Column  Non-Null Count  Dtype  \n",
            "---  ------  --------------  -----  \n",
            " 0   x0      9996 non-null   float64\n",
            " 1   x1      9999 non-null   object \n",
            " 2   x2      9995 non-null   float64\n",
            " 3   x3      9996 non-null   float64\n",
            " 4   x4      9997 non-null   float64\n",
            " 5   x5      9997 non-null   float64\n",
            " 6   x6      9999 non-null   float64\n",
            " 7   x7      9996 non-null   object \n",
            " 8   x8      9998 non-null   float64\n",
            " 9   x9      9999 non-null   float64\n",
            " 10  x10     9996 non-null   float64\n",
            " 11  x11     9997 non-null   object \n",
            " 12  x12     9995 non-null   float64\n",
            " 13  x13     9998 non-null   object \n",
            " 14  x14     9997 non-null   object \n",
            " 15  x15     9999 non-null   float64\n",
            " 16  x16     9998 non-null   float64\n",
            " 17  x17     9999 non-null   object \n",
            " 18  y       9999 non-null   int64  \n",
            "dtypes: float64(12), int64(1), object(6)\n",
            "memory usage: 1.4+ MB\n",
            "None\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.dropna()\n",
        "\n",
        "# confirm there are no null values \n",
        "print(df.info())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5sk-ajwbFUD2",
        "outputId": "cd40ed45-f7db-4bec-b62b-7ba357d94067"
      },
      "execution_count": 175,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 9968 entries, 0 to 9998\n",
            "Data columns (total 19 columns):\n",
            " #   Column  Non-Null Count  Dtype  \n",
            "---  ------  --------------  -----  \n",
            " 0   x0      9968 non-null   float64\n",
            " 1   x1      9968 non-null   object \n",
            " 2   x2      9968 non-null   float64\n",
            " 3   x3      9968 non-null   float64\n",
            " 4   x4      9968 non-null   float64\n",
            " 5   x5      9968 non-null   float64\n",
            " 6   x6      9968 non-null   float64\n",
            " 7   x7      9968 non-null   object \n",
            " 8   x8      9968 non-null   float64\n",
            " 9   x9      9968 non-null   float64\n",
            " 10  x10     9968 non-null   float64\n",
            " 11  x11     9968 non-null   object \n",
            " 12  x12     9968 non-null   float64\n",
            " 13  x13     9968 non-null   object \n",
            " 14  x14     9968 non-null   object \n",
            " 15  x15     9968 non-null   float64\n",
            " 16  x16     9968 non-null   float64\n",
            " 17  x17     9968 non-null   object \n",
            " 18  y       9968 non-null   int64  \n",
            "dtypes: float64(12), int64(1), object(6)\n",
            "memory usage: 1.5+ MB\n",
            "None\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "#confirm no null values \n",
        "import seaborn as sns \n",
        "\n",
        "\n",
        "sns.heatmap(df.isnull())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "id": "g93hjUouFmYB",
        "outputId": "718cd912-b245-452a-850e-33ad39e6a74b"
      },
      "execution_count": 176,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f4a07f04970>"
            ]
          },
          "metadata": {},
          "execution_count": 176
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 364
        },
        "id": "UhNhsv54R4dO",
        "outputId": "b5d0815c-10d7-49ca-9b21-63240547d2d6"
      },
      "execution_count": 177,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                x0           x2           x3           x4           x5  \\\n",
              "count  9968.000000  9968.000000  9968.000000  9968.000000  9968.000000   \n",
              "mean      6.513287    -3.722394    -7.342783    -0.004214     1.359413   \n",
              "std      29.141903    17.235777    38.339536     3.994860     9.606445   \n",
              "min    -106.809919   -65.137848  -150.846091   -14.616540   -37.499530   \n",
              "25%     -13.080154   -15.345889   -33.079854    -2.682927    -5.034970   \n",
              "50%       6.642650    -3.825308    -7.366105     0.007976     1.226912   \n",
              "75%      26.223695     7.766512    18.456663     2.630313     7.814916   \n",
              "max     114.823451    67.685933   127.204103    16.923269    38.624213   \n",
              "\n",
              "                x6           x8           x9          x10          x12  \\\n",
              "count  9968.000000  9968.000000  9968.000000  9968.000000  9968.000000   \n",
              "mean      1.214671    -4.257929    -0.313433   -22.444255     0.032207   \n",
              "std      17.362108   131.942839    38.008296    91.773029     6.063051   \n",
              "min     -59.900503  -661.764937  -142.719688  -427.412374   -25.024464   \n",
              "25%     -10.912293   -91.555182   -25.715174   -79.664111    -4.191842   \n",
              "50%       0.814280    -4.744892    -0.240554   -20.430769     0.150645   \n",
              "75%      12.704117    83.821353    25.450048    38.522813     4.131735   \n",
              "max      68.865261   476.910533   181.063340   319.592518    21.540626   \n",
              "\n",
              "               x15          x16            y  \n",
              "count  9968.000000  9968.000000  9968.000000  \n",
              "mean     -0.237344    -0.429932     0.492075  \n",
              "std      14.668780     2.825145     0.499962  \n",
              "min     -57.315771   -12.527505     0.000000  \n",
              "25%     -10.314455    -2.344646     0.000000  \n",
              "50%      -0.644026    -0.414864     0.000000  \n",
              "75%       9.478207     1.448618     1.000000  \n",
              "max      57.918619     8.987513     1.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3216445b-d2db-4329-8a4c-21c4fb515b8e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>x0</th>\n",
              "      <th>x2</th>\n",
              "      <th>x3</th>\n",
              "      <th>x4</th>\n",
              "      <th>x5</th>\n",
              "      <th>x6</th>\n",
              "      <th>x8</th>\n",
              "      <th>x9</th>\n",
              "      <th>x10</th>\n",
              "      <th>x12</th>\n",
              "      <th>x15</th>\n",
              "      <th>x16</th>\n",
              "      <th>y</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>9968.000000</td>\n",
              "      <td>9968.000000</td>\n",
              "      <td>9968.000000</td>\n",
              "      <td>9968.000000</td>\n",
              "      <td>9968.000000</td>\n",
              "      <td>9968.000000</td>\n",
              "      <td>9968.000000</td>\n",
              "      <td>9968.000000</td>\n",
              "      <td>9968.000000</td>\n",
              "      <td>9968.000000</td>\n",
              "      <td>9968.000000</td>\n",
              "      <td>9968.000000</td>\n",
              "      <td>9968.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>6.513287</td>\n",
              "      <td>-3.722394</td>\n",
              "      <td>-7.342783</td>\n",
              "      <td>-0.004214</td>\n",
              "      <td>1.359413</td>\n",
              "      <td>1.214671</td>\n",
              "      <td>-4.257929</td>\n",
              "      <td>-0.313433</td>\n",
              "      <td>-22.444255</td>\n",
              "      <td>0.032207</td>\n",
              "      <td>-0.237344</td>\n",
              "      <td>-0.429932</td>\n",
              "      <td>0.492075</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>29.141903</td>\n",
              "      <td>17.235777</td>\n",
              "      <td>38.339536</td>\n",
              "      <td>3.994860</td>\n",
              "      <td>9.606445</td>\n",
              "      <td>17.362108</td>\n",
              "      <td>131.942839</td>\n",
              "      <td>38.008296</td>\n",
              "      <td>91.773029</td>\n",
              "      <td>6.063051</td>\n",
              "      <td>14.668780</td>\n",
              "      <td>2.825145</td>\n",
              "      <td>0.499962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>-106.809919</td>\n",
              "      <td>-65.137848</td>\n",
              "      <td>-150.846091</td>\n",
              "      <td>-14.616540</td>\n",
              "      <td>-37.499530</td>\n",
              "      <td>-59.900503</td>\n",
              "      <td>-661.764937</td>\n",
              "      <td>-142.719688</td>\n",
              "      <td>-427.412374</td>\n",
              "      <td>-25.024464</td>\n",
              "      <td>-57.315771</td>\n",
              "      <td>-12.527505</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>-13.080154</td>\n",
              "      <td>-15.345889</td>\n",
              "      <td>-33.079854</td>\n",
              "      <td>-2.682927</td>\n",
              "      <td>-5.034970</td>\n",
              "      <td>-10.912293</td>\n",
              "      <td>-91.555182</td>\n",
              "      <td>-25.715174</td>\n",
              "      <td>-79.664111</td>\n",
              "      <td>-4.191842</td>\n",
              "      <td>-10.314455</td>\n",
              "      <td>-2.344646</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>6.642650</td>\n",
              "      <td>-3.825308</td>\n",
              "      <td>-7.366105</td>\n",
              "      <td>0.007976</td>\n",
              "      <td>1.226912</td>\n",
              "      <td>0.814280</td>\n",
              "      <td>-4.744892</td>\n",
              "      <td>-0.240554</td>\n",
              "      <td>-20.430769</td>\n",
              "      <td>0.150645</td>\n",
              "      <td>-0.644026</td>\n",
              "      <td>-0.414864</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>26.223695</td>\n",
              "      <td>7.766512</td>\n",
              "      <td>18.456663</td>\n",
              "      <td>2.630313</td>\n",
              "      <td>7.814916</td>\n",
              "      <td>12.704117</td>\n",
              "      <td>83.821353</td>\n",
              "      <td>25.450048</td>\n",
              "      <td>38.522813</td>\n",
              "      <td>4.131735</td>\n",
              "      <td>9.478207</td>\n",
              "      <td>1.448618</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>114.823451</td>\n",
              "      <td>67.685933</td>\n",
              "      <td>127.204103</td>\n",
              "      <td>16.923269</td>\n",
              "      <td>38.624213</td>\n",
              "      <td>68.865261</td>\n",
              "      <td>476.910533</td>\n",
              "      <td>181.063340</td>\n",
              "      <td>319.592518</td>\n",
              "      <td>21.540626</td>\n",
              "      <td>57.918619</td>\n",
              "      <td>8.987513</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3216445b-d2db-4329-8a4c-21c4fb515b8e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3216445b-d2db-4329-8a4c-21c4fb515b8e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3216445b-d2db-4329-8a4c-21c4fb515b8e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 177
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#correlation\n",
        "df.corr()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 521
        },
        "id": "5oOtyZMQnWe1",
        "outputId": "78036f4a-9ee6-4404-e249-5b03860e9261"
      },
      "execution_count": 178,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           x0        x2        x3        x4        x5        x6        x8  \\\n",
              "x0   1.000000 -0.219129 -0.148093  0.001345 -0.190407 -0.037691 -0.363017   \n",
              "x2  -0.219129  1.000000 -0.026044  0.003489 -0.115920  0.145405 -0.217005   \n",
              "x3  -0.148093 -0.026044  1.000000  0.015391 -0.151525  0.122395  0.131078   \n",
              "x4   0.001345  0.003489  0.015391  1.000000 -0.005045 -0.001061 -0.016201   \n",
              "x5  -0.190407 -0.115920 -0.151525 -0.005045  1.000000 -0.038951  0.059088   \n",
              "x6  -0.037691  0.145405  0.122395 -0.001061 -0.038951  1.000000 -0.089999   \n",
              "x8  -0.363017 -0.217005  0.131078 -0.016201  0.059088 -0.089999  1.000000   \n",
              "x9   0.087838  0.077940  0.025759 -0.022695 -0.094045  0.109598  0.062159   \n",
              "x10 -0.116116  0.070135  0.075848  0.002589 -0.097640 -0.186211  0.087105   \n",
              "x12 -0.001698  0.003221  0.002332  0.007396  0.002772  0.004142 -0.011201   \n",
              "x15 -0.125492  0.144113 -0.183768  0.005500  0.122379 -0.019434  0.000410   \n",
              "x16 -0.058958  0.101119  0.079053  0.005043 -0.030096  0.128020  0.148276   \n",
              "y   -0.004644 -0.001106  0.004858 -0.003062 -0.004666  0.002882 -0.014154   \n",
              "\n",
              "           x9       x10       x12       x15       x16         y  \n",
              "x0   0.087838 -0.116116 -0.001698 -0.125492 -0.058958 -0.004644  \n",
              "x2   0.077940  0.070135  0.003221  0.144113  0.101119 -0.001106  \n",
              "x3   0.025759  0.075848  0.002332 -0.183768  0.079053  0.004858  \n",
              "x4  -0.022695  0.002589  0.007396  0.005500  0.005043 -0.003062  \n",
              "x5  -0.094045 -0.097640  0.002772  0.122379 -0.030096 -0.004666  \n",
              "x6   0.109598 -0.186211  0.004142 -0.019434  0.128020  0.002882  \n",
              "x8   0.062159  0.087105 -0.011201  0.000410  0.148276 -0.014154  \n",
              "x9   1.000000 -0.014497 -0.006829 -0.144823  0.037800  0.000876  \n",
              "x10 -0.014497  1.000000  0.007150  0.054664 -0.323863  0.015410  \n",
              "x12 -0.006829  0.007150  1.000000  0.015782 -0.006828 -0.000376  \n",
              "x15 -0.144823  0.054664  0.015782  1.000000  0.003793 -0.007587  \n",
              "x16  0.037800 -0.323863 -0.006828  0.003793  1.000000 -0.007069  \n",
              "y    0.000876  0.015410 -0.000376 -0.007587 -0.007069  1.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4e9d3c5e-7dbd-4431-9583-a99daf54ac16\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>x0</th>\n",
              "      <th>x2</th>\n",
              "      <th>x3</th>\n",
              "      <th>x4</th>\n",
              "      <th>x5</th>\n",
              "      <th>x6</th>\n",
              "      <th>x8</th>\n",
              "      <th>x9</th>\n",
              "      <th>x10</th>\n",
              "      <th>x12</th>\n",
              "      <th>x15</th>\n",
              "      <th>x16</th>\n",
              "      <th>y</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>x0</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.219129</td>\n",
              "      <td>-0.148093</td>\n",
              "      <td>0.001345</td>\n",
              "      <td>-0.190407</td>\n",
              "      <td>-0.037691</td>\n",
              "      <td>-0.363017</td>\n",
              "      <td>0.087838</td>\n",
              "      <td>-0.116116</td>\n",
              "      <td>-0.001698</td>\n",
              "      <td>-0.125492</td>\n",
              "      <td>-0.058958</td>\n",
              "      <td>-0.004644</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>x2</th>\n",
              "      <td>-0.219129</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.026044</td>\n",
              "      <td>0.003489</td>\n",
              "      <td>-0.115920</td>\n",
              "      <td>0.145405</td>\n",
              "      <td>-0.217005</td>\n",
              "      <td>0.077940</td>\n",
              "      <td>0.070135</td>\n",
              "      <td>0.003221</td>\n",
              "      <td>0.144113</td>\n",
              "      <td>0.101119</td>\n",
              "      <td>-0.001106</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>x3</th>\n",
              "      <td>-0.148093</td>\n",
              "      <td>-0.026044</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.015391</td>\n",
              "      <td>-0.151525</td>\n",
              "      <td>0.122395</td>\n",
              "      <td>0.131078</td>\n",
              "      <td>0.025759</td>\n",
              "      <td>0.075848</td>\n",
              "      <td>0.002332</td>\n",
              "      <td>-0.183768</td>\n",
              "      <td>0.079053</td>\n",
              "      <td>0.004858</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>x4</th>\n",
              "      <td>0.001345</td>\n",
              "      <td>0.003489</td>\n",
              "      <td>0.015391</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.005045</td>\n",
              "      <td>-0.001061</td>\n",
              "      <td>-0.016201</td>\n",
              "      <td>-0.022695</td>\n",
              "      <td>0.002589</td>\n",
              "      <td>0.007396</td>\n",
              "      <td>0.005500</td>\n",
              "      <td>0.005043</td>\n",
              "      <td>-0.003062</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>x5</th>\n",
              "      <td>-0.190407</td>\n",
              "      <td>-0.115920</td>\n",
              "      <td>-0.151525</td>\n",
              "      <td>-0.005045</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.038951</td>\n",
              "      <td>0.059088</td>\n",
              "      <td>-0.094045</td>\n",
              "      <td>-0.097640</td>\n",
              "      <td>0.002772</td>\n",
              "      <td>0.122379</td>\n",
              "      <td>-0.030096</td>\n",
              "      <td>-0.004666</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>x6</th>\n",
              "      <td>-0.037691</td>\n",
              "      <td>0.145405</td>\n",
              "      <td>0.122395</td>\n",
              "      <td>-0.001061</td>\n",
              "      <td>-0.038951</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.089999</td>\n",
              "      <td>0.109598</td>\n",
              "      <td>-0.186211</td>\n",
              "      <td>0.004142</td>\n",
              "      <td>-0.019434</td>\n",
              "      <td>0.128020</td>\n",
              "      <td>0.002882</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>x8</th>\n",
              "      <td>-0.363017</td>\n",
              "      <td>-0.217005</td>\n",
              "      <td>0.131078</td>\n",
              "      <td>-0.016201</td>\n",
              "      <td>0.059088</td>\n",
              "      <td>-0.089999</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.062159</td>\n",
              "      <td>0.087105</td>\n",
              "      <td>-0.011201</td>\n",
              "      <td>0.000410</td>\n",
              "      <td>0.148276</td>\n",
              "      <td>-0.014154</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>x9</th>\n",
              "      <td>0.087838</td>\n",
              "      <td>0.077940</td>\n",
              "      <td>0.025759</td>\n",
              "      <td>-0.022695</td>\n",
              "      <td>-0.094045</td>\n",
              "      <td>0.109598</td>\n",
              "      <td>0.062159</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.014497</td>\n",
              "      <td>-0.006829</td>\n",
              "      <td>-0.144823</td>\n",
              "      <td>0.037800</td>\n",
              "      <td>0.000876</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>x10</th>\n",
              "      <td>-0.116116</td>\n",
              "      <td>0.070135</td>\n",
              "      <td>0.075848</td>\n",
              "      <td>0.002589</td>\n",
              "      <td>-0.097640</td>\n",
              "      <td>-0.186211</td>\n",
              "      <td>0.087105</td>\n",
              "      <td>-0.014497</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.007150</td>\n",
              "      <td>0.054664</td>\n",
              "      <td>-0.323863</td>\n",
              "      <td>0.015410</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>x12</th>\n",
              "      <td>-0.001698</td>\n",
              "      <td>0.003221</td>\n",
              "      <td>0.002332</td>\n",
              "      <td>0.007396</td>\n",
              "      <td>0.002772</td>\n",
              "      <td>0.004142</td>\n",
              "      <td>-0.011201</td>\n",
              "      <td>-0.006829</td>\n",
              "      <td>0.007150</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.015782</td>\n",
              "      <td>-0.006828</td>\n",
              "      <td>-0.000376</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>x15</th>\n",
              "      <td>-0.125492</td>\n",
              "      <td>0.144113</td>\n",
              "      <td>-0.183768</td>\n",
              "      <td>0.005500</td>\n",
              "      <td>0.122379</td>\n",
              "      <td>-0.019434</td>\n",
              "      <td>0.000410</td>\n",
              "      <td>-0.144823</td>\n",
              "      <td>0.054664</td>\n",
              "      <td>0.015782</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.003793</td>\n",
              "      <td>-0.007587</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>x16</th>\n",
              "      <td>-0.058958</td>\n",
              "      <td>0.101119</td>\n",
              "      <td>0.079053</td>\n",
              "      <td>0.005043</td>\n",
              "      <td>-0.030096</td>\n",
              "      <td>0.128020</td>\n",
              "      <td>0.148276</td>\n",
              "      <td>0.037800</td>\n",
              "      <td>-0.323863</td>\n",
              "      <td>-0.006828</td>\n",
              "      <td>0.003793</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.007069</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>y</th>\n",
              "      <td>-0.004644</td>\n",
              "      <td>-0.001106</td>\n",
              "      <td>0.004858</td>\n",
              "      <td>-0.003062</td>\n",
              "      <td>-0.004666</td>\n",
              "      <td>0.002882</td>\n",
              "      <td>-0.014154</td>\n",
              "      <td>0.000876</td>\n",
              "      <td>0.015410</td>\n",
              "      <td>-0.000376</td>\n",
              "      <td>-0.007587</td>\n",
              "      <td>-0.007069</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4e9d3c5e-7dbd-4431-9583-a99daf54ac16')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4e9d3c5e-7dbd-4431-9583-a99daf54ac16 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4e9d3c5e-7dbd-4431-9583-a99daf54ac16');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 178
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "plt.figure(figsize=(16, 6))\n",
        "heatmap = sns.heatmap(df.corr(), vmin=-1, vmax=1, annot=True)\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 373
        },
        "id": "zgDEnU4TnZGP",
        "outputId": "e405b18c-bef1-473f-9d50-33e6647b6fdd"
      },
      "execution_count": 179,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x432 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Change Category var into numerical var\n",
        "from sklearn.preprocessing import LabelEncoder\n",
        "le=LabelEncoder()\n",
        "df['x1']=le.fit_transform(df['x1'])\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "mz1Wx2MwqVwH",
        "outputId": "31c2cb43-bdd0-4c4b-f8b9-878d277b3483"
      },
      "execution_count": 180,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          x0  x1         x2         x3        x4         x5         x6  \\\n",
              "0 -17.933519   6   6.559220 -14.452810 -4.732855   0.381673   2.563194   \n",
              "1 -37.214754   5  10.774930 -15.384004 -0.077339  10.983774 -15.210206   \n",
              "2   0.330441   1 -19.609972  -9.167911  2.064124  12.071688  12.506141   \n",
              "3 -13.709765   1  -8.011390   6.759264  1.727615  -1.768382  24.039733   \n",
              "4  -4.202598   8   7.076210 -26.004919 -4.269696  -3.414224   2.115989   \n",
              "\n",
              "            x7          x8         x9        x10     x11       x12     x13  \\\n",
              "0  ($1,306.52)  -89.394348 -28.454044 -16.201298  -0.01%  0.217010   tesla   \n",
              "1     ($24.86)  153.032652 -32.557736  69.675903   0.00% -3.584908  Toyota   \n",
              "2    ($110.85) -141.437276 -20.794952  55.042604   0.00% -3.991366     bmw   \n",
              "3    ($324.43)   51.039653  -7.046908 -31.424419   0.01%  7.908897  Toyota   \n",
              "4   $1,213.37   -31.046700  19.061182 -31.525515  -0.01%  0.846719   Honda   \n",
              "\n",
              "         x14        x15       x16    x17  y  \n",
              "0    thurday   9.729891 -0.786431  small  1  \n",
              "1       thur  35.727926 -0.985552  small  0  \n",
              "2  wednesday  -9.283523 -3.394718  small  1  \n",
              "3        wed  -2.891882 -2.690222  small  0  \n",
              "4  wednesday  25.497480  3.516801  small  1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9cf466e4-5a42-4d93-87bb-f45593bcb1f2\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>x0</th>\n",
              "      <th>x1</th>\n",
              "      <th>x2</th>\n",
              "      <th>x3</th>\n",
              "      <th>x4</th>\n",
              "      <th>x5</th>\n",
              "      <th>x6</th>\n",
              "      <th>x7</th>\n",
              "      <th>x8</th>\n",
              "      <th>x9</th>\n",
              "      <th>x10</th>\n",
              "      <th>x11</th>\n",
              "      <th>x12</th>\n",
              "      <th>x13</th>\n",
              "      <th>x14</th>\n",
              "      <th>x15</th>\n",
              "      <th>x16</th>\n",
              "      <th>x17</th>\n",
              "      <th>y</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-17.933519</td>\n",
              "      <td>6</td>\n",
              "      <td>6.559220</td>\n",
              "      <td>-14.452810</td>\n",
              "      <td>-4.732855</td>\n",
              "      <td>0.381673</td>\n",
              "      <td>2.563194</td>\n",
              "      <td>($1,306.52)</td>\n",
              "      <td>-89.394348</td>\n",
              "      <td>-28.454044</td>\n",
              "      <td>-16.201298</td>\n",
              "      <td>-0.01%</td>\n",
              "      <td>0.217010</td>\n",
              "      <td>tesla</td>\n",
              "      <td>thurday</td>\n",
              "      <td>9.729891</td>\n",
              "      <td>-0.786431</td>\n",
              "      <td>small</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-37.214754</td>\n",
              "      <td>5</td>\n",
              "      <td>10.774930</td>\n",
              "      <td>-15.384004</td>\n",
              "      <td>-0.077339</td>\n",
              "      <td>10.983774</td>\n",
              "      <td>-15.210206</td>\n",
              "      <td>($24.86)</td>\n",
              "      <td>153.032652</td>\n",
              "      <td>-32.557736</td>\n",
              "      <td>69.675903</td>\n",
              "      <td>0.00%</td>\n",
              "      <td>-3.584908</td>\n",
              "      <td>Toyota</td>\n",
              "      <td>thur</td>\n",
              "      <td>35.727926</td>\n",
              "      <td>-0.985552</td>\n",
              "      <td>small</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.330441</td>\n",
              "      <td>1</td>\n",
              "      <td>-19.609972</td>\n",
              "      <td>-9.167911</td>\n",
              "      <td>2.064124</td>\n",
              "      <td>12.071688</td>\n",
              "      <td>12.506141</td>\n",
              "      <td>($110.85)</td>\n",
              "      <td>-141.437276</td>\n",
              "      <td>-20.794952</td>\n",
              "      <td>55.042604</td>\n",
              "      <td>0.00%</td>\n",
              "      <td>-3.991366</td>\n",
              "      <td>bmw</td>\n",
              "      <td>wednesday</td>\n",
              "      <td>-9.283523</td>\n",
              "      <td>-3.394718</td>\n",
              "      <td>small</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-13.709765</td>\n",
              "      <td>1</td>\n",
              "      <td>-8.011390</td>\n",
              "      <td>6.759264</td>\n",
              "      <td>1.727615</td>\n",
              "      <td>-1.768382</td>\n",
              "      <td>24.039733</td>\n",
              "      <td>($324.43)</td>\n",
              "      <td>51.039653</td>\n",
              "      <td>-7.046908</td>\n",
              "      <td>-31.424419</td>\n",
              "      <td>0.01%</td>\n",
              "      <td>7.908897</td>\n",
              "      <td>Toyota</td>\n",
              "      <td>wed</td>\n",
              "      <td>-2.891882</td>\n",
              "      <td>-2.690222</td>\n",
              "      <td>small</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-4.202598</td>\n",
              "      <td>8</td>\n",
              "      <td>7.076210</td>\n",
              "      <td>-26.004919</td>\n",
              "      <td>-4.269696</td>\n",
              "      <td>-3.414224</td>\n",
              "      <td>2.115989</td>\n",
              "      <td>$1,213.37</td>\n",
              "      <td>-31.046700</td>\n",
              "      <td>19.061182</td>\n",
              "      <td>-31.525515</td>\n",
              "      <td>-0.01%</td>\n",
              "      <td>0.846719</td>\n",
              "      <td>Honda</td>\n",
              "      <td>wednesday</td>\n",
              "      <td>25.497480</td>\n",
              "      <td>3.516801</td>\n",
              "      <td>small</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9cf466e4-5a42-4d93-87bb-f45593bcb1f2')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9cf466e4-5a42-4d93-87bb-f45593bcb1f2 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9cf466e4-5a42-4d93-87bb-f45593bcb1f2');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 180
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import LabelEncoder\n",
        "le=LabelEncoder()\n",
        "df['x13']=le.fit_transform(df['x13'])\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "EM9C6noc0FxV",
        "outputId": "87a94f4c-ab05-4bee-b554-4db7952c7fb0"
      },
      "execution_count": 181,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          x0  x1         x2         x3        x4         x5         x6  \\\n",
              "0 -17.933519   6   6.559220 -14.452810 -4.732855   0.381673   2.563194   \n",
              "1 -37.214754   5  10.774930 -15.384004 -0.077339  10.983774 -15.210206   \n",
              "2   0.330441   1 -19.609972  -9.167911  2.064124  12.071688  12.506141   \n",
              "3 -13.709765   1  -8.011390   6.759264  1.727615  -1.768382  24.039733   \n",
              "4  -4.202598   8   7.076210 -26.004919 -4.269696  -3.414224   2.115989   \n",
              "\n",
              "            x7          x8         x9        x10     x11       x12  x13  \\\n",
              "0  ($1,306.52)  -89.394348 -28.454044 -16.201298  -0.01%  0.217010    8   \n",
              "1     ($24.86)  153.032652 -32.557736  69.675903   0.00% -3.584908    1   \n",
              "2    ($110.85) -141.437276 -20.794952  55.042604   0.00% -3.991366    2   \n",
              "3    ($324.43)   51.039653  -7.046908 -31.424419   0.01%  7.908897    1   \n",
              "4   $1,213.37   -31.046700  19.061182 -31.525515  -0.01%  0.846719    0   \n",
              "\n",
              "         x14        x15       x16    x17  y  \n",
              "0    thurday   9.729891 -0.786431  small  1  \n",
              "1       thur  35.727926 -0.985552  small  0  \n",
              "2  wednesday  -9.283523 -3.394718  small  1  \n",
              "3        wed  -2.891882 -2.690222  small  0  \n",
              "4  wednesday  25.497480  3.516801  small  1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c720307e-ce17-4cd0-b406-43b02d91ace6\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>x0</th>\n",
              "      <th>x1</th>\n",
              "      <th>x2</th>\n",
              "      <th>x3</th>\n",
              "      <th>x4</th>\n",
              "      <th>x5</th>\n",
              "      <th>x6</th>\n",
              "      <th>x7</th>\n",
              "      <th>x8</th>\n",
              "      <th>x9</th>\n",
              "      <th>x10</th>\n",
              "      <th>x11</th>\n",
              "      <th>x12</th>\n",
              "      <th>x13</th>\n",
              "      <th>x14</th>\n",
              "      <th>x15</th>\n",
              "      <th>x16</th>\n",
              "      <th>x17</th>\n",
              "      <th>y</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-17.933519</td>\n",
              "      <td>6</td>\n",
              "      <td>6.559220</td>\n",
              "      <td>-14.452810</td>\n",
              "      <td>-4.732855</td>\n",
              "      <td>0.381673</td>\n",
              "      <td>2.563194</td>\n",
              "      <td>($1,306.52)</td>\n",
              "      <td>-89.394348</td>\n",
              "      <td>-28.454044</td>\n",
              "      <td>-16.201298</td>\n",
              "      <td>-0.01%</td>\n",
              "      <td>0.217010</td>\n",
              "      <td>8</td>\n",
              "      <td>thurday</td>\n",
              "      <td>9.729891</td>\n",
              "      <td>-0.786431</td>\n",
              "      <td>small</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-37.214754</td>\n",
              "      <td>5</td>\n",
              "      <td>10.774930</td>\n",
              "      <td>-15.384004</td>\n",
              "      <td>-0.077339</td>\n",
              "      <td>10.983774</td>\n",
              "      <td>-15.210206</td>\n",
              "      <td>($24.86)</td>\n",
              "      <td>153.032652</td>\n",
              "      <td>-32.557736</td>\n",
              "      <td>69.675903</td>\n",
              "      <td>0.00%</td>\n",
              "      <td>-3.584908</td>\n",
              "      <td>1</td>\n",
              "      <td>thur</td>\n",
              "      <td>35.727926</td>\n",
              "      <td>-0.985552</td>\n",
              "      <td>small</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.330441</td>\n",
              "      <td>1</td>\n",
              "      <td>-19.609972</td>\n",
              "      <td>-9.167911</td>\n",
              "      <td>2.064124</td>\n",
              "      <td>12.071688</td>\n",
              "      <td>12.506141</td>\n",
              "      <td>($110.85)</td>\n",
              "      <td>-141.437276</td>\n",
              "      <td>-20.794952</td>\n",
              "      <td>55.042604</td>\n",
              "      <td>0.00%</td>\n",
              "      <td>-3.991366</td>\n",
              "      <td>2</td>\n",
              "      <td>wednesday</td>\n",
              "      <td>-9.283523</td>\n",
              "      <td>-3.394718</td>\n",
              "      <td>small</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-13.709765</td>\n",
              "      <td>1</td>\n",
              "      <td>-8.011390</td>\n",
              "      <td>6.759264</td>\n",
              "      <td>1.727615</td>\n",
              "      <td>-1.768382</td>\n",
              "      <td>24.039733</td>\n",
              "      <td>($324.43)</td>\n",
              "      <td>51.039653</td>\n",
              "      <td>-7.046908</td>\n",
              "      <td>-31.424419</td>\n",
              "      <td>0.01%</td>\n",
              "      <td>7.908897</td>\n",
              "      <td>1</td>\n",
              "      <td>wed</td>\n",
              "      <td>-2.891882</td>\n",
              "      <td>-2.690222</td>\n",
              "      <td>small</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-4.202598</td>\n",
              "      <td>8</td>\n",
              "      <td>7.076210</td>\n",
              "      <td>-26.004919</td>\n",
              "      <td>-4.269696</td>\n",
              "      <td>-3.414224</td>\n",
              "      <td>2.115989</td>\n",
              "      <td>$1,213.37</td>\n",
              "      <td>-31.046700</td>\n",
              "      <td>19.061182</td>\n",
              "      <td>-31.525515</td>\n",
              "      <td>-0.01%</td>\n",
              "      <td>0.846719</td>\n",
              "      <td>0</td>\n",
              "      <td>wednesday</td>\n",
              "      <td>25.497480</td>\n",
              "      <td>3.516801</td>\n",
              "      <td>small</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c720307e-ce17-4cd0-b406-43b02d91ace6')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c720307e-ce17-4cd0-b406-43b02d91ace6 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c720307e-ce17-4cd0-b406-43b02d91ace6');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 181
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import LabelEncoder\n",
        "le=LabelEncoder()\n",
        "df['x14']=le.fit_transform(df['x14'])\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 270
        },
        "id": "ocDV0O000PhQ",
        "outputId": "4fde4877-2656-4725-8dfb-4cb27e055fa2"
      },
      "execution_count": 182,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          x0  x1         x2         x3        x4         x5         x6  \\\n",
              "0 -17.933519   6   6.559220 -14.452810 -4.732855   0.381673   2.563194   \n",
              "1 -37.214754   5  10.774930 -15.384004 -0.077339  10.983774 -15.210206   \n",
              "2   0.330441   1 -19.609972  -9.167911  2.064124  12.071688  12.506141   \n",
              "3 -13.709765   1  -8.011390   6.759264  1.727615  -1.768382  24.039733   \n",
              "4  -4.202598   8   7.076210 -26.004919 -4.269696  -3.414224   2.115989   \n",
              "\n",
              "            x7          x8         x9        x10     x11       x12  x13  x14  \\\n",
              "0  ($1,306.52)  -89.394348 -28.454044 -16.201298  -0.01%  0.217010    8    4   \n",
              "1     ($24.86)  153.032652 -32.557736  69.675903   0.00% -3.584908    1    3   \n",
              "2    ($110.85) -141.437276 -20.794952  55.042604   0.00% -3.991366    2    7   \n",
              "3    ($324.43)   51.039653  -7.046908 -31.424419   0.01%  7.908897    1    6   \n",
              "4   $1,213.37   -31.046700  19.061182 -31.525515  -0.01%  0.846719    0    7   \n",
              "\n",
              "         x15       x16    x17  y  \n",
              "0   9.729891 -0.786431  small  1  \n",
              "1  35.727926 -0.985552  small  0  \n",
              "2  -9.283523 -3.394718  small  1  \n",
              "3  -2.891882 -2.690222  small  0  \n",
              "4  25.497480  3.516801  small  1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a814bd09-bebc-4d7d-9411-d980e4d1517d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>x0</th>\n",
              "      <th>x1</th>\n",
              "      <th>x2</th>\n",
              "      <th>x3</th>\n",
              "      <th>x4</th>\n",
              "      <th>x5</th>\n",
              "      <th>x6</th>\n",
              "      <th>x7</th>\n",
              "      <th>x8</th>\n",
              "      <th>x9</th>\n",
              "      <th>x10</th>\n",
              "      <th>x11</th>\n",
              "      <th>x12</th>\n",
              "      <th>x13</th>\n",
              "      <th>x14</th>\n",
              "      <th>x15</th>\n",
              "      <th>x16</th>\n",
              "      <th>x17</th>\n",
              "      <th>y</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-17.933519</td>\n",
              "      <td>6</td>\n",
              "      <td>6.559220</td>\n",
              "      <td>-14.452810</td>\n",
              "      <td>-4.732855</td>\n",
              "      <td>0.381673</td>\n",
              "      <td>2.563194</td>\n",
              "      <td>($1,306.52)</td>\n",
              "      <td>-89.394348</td>\n",
              "      <td>-28.454044</td>\n",
              "      <td>-16.201298</td>\n",
              "      <td>-0.01%</td>\n",
              "      <td>0.217010</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>9.729891</td>\n",
              "      <td>-0.786431</td>\n",
              "      <td>small</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-37.214754</td>\n",
              "      <td>5</td>\n",
              "      <td>10.774930</td>\n",
              "      <td>-15.384004</td>\n",
              "      <td>-0.077339</td>\n",
              "      <td>10.983774</td>\n",
              "      <td>-15.210206</td>\n",
              "      <td>($24.86)</td>\n",
              "      <td>153.032652</td>\n",
              "      <td>-32.557736</td>\n",
              "      <td>69.675903</td>\n",
              "      <td>0.00%</td>\n",
              "      <td>-3.584908</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>35.727926</td>\n",
              "      <td>-0.985552</td>\n",
              "      <td>small</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.330441</td>\n",
              "      <td>1</td>\n",
              "      <td>-19.609972</td>\n",
              "      <td>-9.167911</td>\n",
              "      <td>2.064124</td>\n",
              "      <td>12.071688</td>\n",
              "      <td>12.506141</td>\n",
              "      <td>($110.85)</td>\n",
              "      <td>-141.437276</td>\n",
              "      <td>-20.794952</td>\n",
              "      <td>55.042604</td>\n",
              "      <td>0.00%</td>\n",
              "      <td>-3.991366</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>-9.283523</td>\n",
              "      <td>-3.394718</td>\n",
              "      <td>small</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-13.709765</td>\n",
              "      <td>1</td>\n",
              "      <td>-8.011390</td>\n",
              "      <td>6.759264</td>\n",
              "      <td>1.727615</td>\n",
              "      <td>-1.768382</td>\n",
              "      <td>24.039733</td>\n",
              "      <td>($324.43)</td>\n",
              "      <td>51.039653</td>\n",
              "      <td>-7.046908</td>\n",
              "      <td>-31.424419</td>\n",
              "      <td>0.01%</td>\n",
              "      <td>7.908897</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>-2.891882</td>\n",
              "      <td>-2.690222</td>\n",
              "      <td>small</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-4.202598</td>\n",
              "      <td>8</td>\n",
              "      <td>7.076210</td>\n",
              "      <td>-26.004919</td>\n",
              "      <td>-4.269696</td>\n",
              "      <td>-3.414224</td>\n",
              "      <td>2.115989</td>\n",
              "      <td>$1,213.37</td>\n",
              "      <td>-31.046700</td>\n",
              "      <td>19.061182</td>\n",
              "      <td>-31.525515</td>\n",
              "      <td>-0.01%</td>\n",
              "      <td>0.846719</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>25.497480</td>\n",
              "      <td>3.516801</td>\n",
              "      <td>small</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a814bd09-bebc-4d7d-9411-d980e4d1517d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a814bd09-bebc-4d7d-9411-d980e4d1517d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a814bd09-bebc-4d7d-9411-d980e4d1517d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 182
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import LabelEncoder\n",
        "le=LabelEncoder()\n",
        "df['x17']=le.fit_transform(df['x17'])\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "het8lIuJ0Vky",
        "outputId": "4dad7d1b-90c7-49ca-f48c-fdf3e4cd97d7"
      },
      "execution_count": 183,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             x0  x1         x2         x3         x4         x5         x6  \\\n",
              "0    -17.933519   6   6.559220 -14.452810  -4.732855   0.381673   2.563194   \n",
              "1    -37.214754   5  10.774930 -15.384004  -0.077339  10.983774 -15.210206   \n",
              "2      0.330441   1 -19.609972  -9.167911   2.064124  12.071688  12.506141   \n",
              "3    -13.709765   1  -8.011390   6.759264   1.727615  -1.768382  24.039733   \n",
              "4     -4.202598   8   7.076210 -26.004919  -4.269696  -3.414224   2.115989   \n",
              "...         ...  ..        ...        ...        ...        ...        ...   \n",
              "9994  -1.967405   0 -25.561679  28.188776   1.150223  -1.887983 -10.482834   \n",
              "9995  41.257961   8  -0.264639  11.293025  -5.768300   4.088754   0.300116   \n",
              "9996  11.431402   8 -28.363664 -35.619430  10.238941   6.494562  -0.407489   \n",
              "9997 -19.039869   1 -20.251227  -3.002298  -1.039843  10.741492 -26.970477   \n",
              "9998 -48.567163   5   5.209877 -43.120062   2.945213   0.804878  -7.292381   \n",
              "\n",
              "               x7          x8         x9         x10     x11       x12  x13  \\\n",
              "0     ($1,306.52)  -89.394348 -28.454044  -16.201298  -0.01%  0.217010    8   \n",
              "1        ($24.86)  153.032652 -32.557736   69.675903   0.00% -3.584908    1   \n",
              "2       ($110.85) -141.437276 -20.794952   55.042604   0.00% -3.991366    2   \n",
              "3       ($324.43)   51.039653  -7.046908  -31.424419   0.01%  7.908897    1   \n",
              "4      $1,213.37   -31.046700  19.061182  -31.525515  -0.01%  0.846719    0   \n",
              "...           ...         ...        ...         ...     ...       ...  ...   \n",
              "9994  ($1,481.74)  203.758763  28.032961  -13.506947   0.00%  2.840758    9   \n",
              "9995     $417.34    81.247235  32.269791   20.841980   0.00% -2.268718    2   \n",
              "9996  ($1,937.19)   68.974245 -12.463081    3.114821  -0.02% -5.195810    0   \n",
              "9997  ($1,472.62)   82.525340  18.593754  -67.440846  -0.01%  6.179807    2   \n",
              "9998    ($863.61)  256.816776  23.831887  111.781530   0.01% -4.626701    9   \n",
              "\n",
              "      x14        x15       x16  x17  y  \n",
              "0       4   9.729891 -0.786431    2  1  \n",
              "1       3  35.727926 -0.985552    2  0  \n",
              "2       7  -9.283523 -3.394718    2  1  \n",
              "3       6  -2.891882 -2.690222    2  0  \n",
              "4       7  25.497480  3.516801    2  1  \n",
              "...   ...        ...       ...  ... ..  \n",
              "9994    4 -30.167906  0.979618    2  1  \n",
              "9995    6  -7.595250  0.269051    2  1  \n",
              "9996    7   9.583622  1.684282    2  1  \n",
              "9997    1   3.873697 -0.525457    2  0  \n",
              "9998    7   5.290918  2.453116    1  1  \n",
              "\n",
              "[9968 rows x 19 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-96f6dedd-76b0-46c4-8e2f-3946222af1ff\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>x0</th>\n",
              "      <th>x1</th>\n",
              "      <th>x2</th>\n",
              "      <th>x3</th>\n",
              "      <th>x4</th>\n",
              "      <th>x5</th>\n",
              "      <th>x6</th>\n",
              "      <th>x7</th>\n",
              "      <th>x8</th>\n",
              "      <th>x9</th>\n",
              "      <th>x10</th>\n",
              "      <th>x11</th>\n",
              "      <th>x12</th>\n",
              "      <th>x13</th>\n",
              "      <th>x14</th>\n",
              "      <th>x15</th>\n",
              "      <th>x16</th>\n",
              "      <th>x17</th>\n",
              "      <th>y</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-17.933519</td>\n",
              "      <td>6</td>\n",
              "      <td>6.559220</td>\n",
              "      <td>-14.452810</td>\n",
              "      <td>-4.732855</td>\n",
              "      <td>0.381673</td>\n",
              "      <td>2.563194</td>\n",
              "      <td>($1,306.52)</td>\n",
              "      <td>-89.394348</td>\n",
              "      <td>-28.454044</td>\n",
              "      <td>-16.201298</td>\n",
              "      <td>-0.01%</td>\n",
              "      <td>0.217010</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>9.729891</td>\n",
              "      <td>-0.786431</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-37.214754</td>\n",
              "      <td>5</td>\n",
              "      <td>10.774930</td>\n",
              "      <td>-15.384004</td>\n",
              "      <td>-0.077339</td>\n",
              "      <td>10.983774</td>\n",
              "      <td>-15.210206</td>\n",
              "      <td>($24.86)</td>\n",
              "      <td>153.032652</td>\n",
              "      <td>-32.557736</td>\n",
              "      <td>69.675903</td>\n",
              "      <td>0.00%</td>\n",
              "      <td>-3.584908</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>35.727926</td>\n",
              "      <td>-0.985552</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.330441</td>\n",
              "      <td>1</td>\n",
              "      <td>-19.609972</td>\n",
              "      <td>-9.167911</td>\n",
              "      <td>2.064124</td>\n",
              "      <td>12.071688</td>\n",
              "      <td>12.506141</td>\n",
              "      <td>($110.85)</td>\n",
              "      <td>-141.437276</td>\n",
              "      <td>-20.794952</td>\n",
              "      <td>55.042604</td>\n",
              "      <td>0.00%</td>\n",
              "      <td>-3.991366</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>-9.283523</td>\n",
              "      <td>-3.394718</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-13.709765</td>\n",
              "      <td>1</td>\n",
              "      <td>-8.011390</td>\n",
              "      <td>6.759264</td>\n",
              "      <td>1.727615</td>\n",
              "      <td>-1.768382</td>\n",
              "      <td>24.039733</td>\n",
              "      <td>($324.43)</td>\n",
              "      <td>51.039653</td>\n",
              "      <td>-7.046908</td>\n",
              "      <td>-31.424419</td>\n",
              "      <td>0.01%</td>\n",
              "      <td>7.908897</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>-2.891882</td>\n",
              "      <td>-2.690222</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-4.202598</td>\n",
              "      <td>8</td>\n",
              "      <td>7.076210</td>\n",
              "      <td>-26.004919</td>\n",
              "      <td>-4.269696</td>\n",
              "      <td>-3.414224</td>\n",
              "      <td>2.115989</td>\n",
              "      <td>$1,213.37</td>\n",
              "      <td>-31.046700</td>\n",
              "      <td>19.061182</td>\n",
              "      <td>-31.525515</td>\n",
              "      <td>-0.01%</td>\n",
              "      <td>0.846719</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>25.497480</td>\n",
              "      <td>3.516801</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9994</th>\n",
              "      <td>-1.967405</td>\n",
              "      <td>0</td>\n",
              "      <td>-25.561679</td>\n",
              "      <td>28.188776</td>\n",
              "      <td>1.150223</td>\n",
              "      <td>-1.887983</td>\n",
              "      <td>-10.482834</td>\n",
              "      <td>($1,481.74)</td>\n",
              "      <td>203.758763</td>\n",
              "      <td>28.032961</td>\n",
              "      <td>-13.506947</td>\n",
              "      <td>0.00%</td>\n",
              "      <td>2.840758</td>\n",
              "      <td>9</td>\n",
              "      <td>4</td>\n",
              "      <td>-30.167906</td>\n",
              "      <td>0.979618</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>41.257961</td>\n",
              "      <td>8</td>\n",
              "      <td>-0.264639</td>\n",
              "      <td>11.293025</td>\n",
              "      <td>-5.768300</td>\n",
              "      <td>4.088754</td>\n",
              "      <td>0.300116</td>\n",
              "      <td>$417.34</td>\n",
              "      <td>81.247235</td>\n",
              "      <td>32.269791</td>\n",
              "      <td>20.841980</td>\n",
              "      <td>0.00%</td>\n",
              "      <td>-2.268718</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>-7.595250</td>\n",
              "      <td>0.269051</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>11.431402</td>\n",
              "      <td>8</td>\n",
              "      <td>-28.363664</td>\n",
              "      <td>-35.619430</td>\n",
              "      <td>10.238941</td>\n",
              "      <td>6.494562</td>\n",
              "      <td>-0.407489</td>\n",
              "      <td>($1,937.19)</td>\n",
              "      <td>68.974245</td>\n",
              "      <td>-12.463081</td>\n",
              "      <td>3.114821</td>\n",
              "      <td>-0.02%</td>\n",
              "      <td>-5.195810</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>9.583622</td>\n",
              "      <td>1.684282</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>-19.039869</td>\n",
              "      <td>1</td>\n",
              "      <td>-20.251227</td>\n",
              "      <td>-3.002298</td>\n",
              "      <td>-1.039843</td>\n",
              "      <td>10.741492</td>\n",
              "      <td>-26.970477</td>\n",
              "      <td>($1,472.62)</td>\n",
              "      <td>82.525340</td>\n",
              "      <td>18.593754</td>\n",
              "      <td>-67.440846</td>\n",
              "      <td>-0.01%</td>\n",
              "      <td>6.179807</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3.873697</td>\n",
              "      <td>-0.525457</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>-48.567163</td>\n",
              "      <td>5</td>\n",
              "      <td>5.209877</td>\n",
              "      <td>-43.120062</td>\n",
              "      <td>2.945213</td>\n",
              "      <td>0.804878</td>\n",
              "      <td>-7.292381</td>\n",
              "      <td>($863.61)</td>\n",
              "      <td>256.816776</td>\n",
              "      <td>23.831887</td>\n",
              "      <td>111.781530</td>\n",
              "      <td>0.01%</td>\n",
              "      <td>-4.626701</td>\n",
              "      <td>9</td>\n",
              "      <td>7</td>\n",
              "      <td>5.290918</td>\n",
              "      <td>2.453116</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>9968 rows × 19 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-96f6dedd-76b0-46c4-8e2f-3946222af1ff')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-96f6dedd-76b0-46c4-8e2f-3946222af1ff button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-96f6dedd-76b0-46c4-8e2f-3946222af1ff');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 183
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df.info())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gogpqPg74JgX",
        "outputId": "917f20f2-a50e-4772-c882-df2346109a99"
      },
      "execution_count": 184,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 9968 entries, 0 to 9998\n",
            "Data columns (total 19 columns):\n",
            " #   Column  Non-Null Count  Dtype  \n",
            "---  ------  --------------  -----  \n",
            " 0   x0      9968 non-null   float64\n",
            " 1   x1      9968 non-null   int64  \n",
            " 2   x2      9968 non-null   float64\n",
            " 3   x3      9968 non-null   float64\n",
            " 4   x4      9968 non-null   float64\n",
            " 5   x5      9968 non-null   float64\n",
            " 6   x6      9968 non-null   float64\n",
            " 7   x7      9968 non-null   object \n",
            " 8   x8      9968 non-null   float64\n",
            " 9   x9      9968 non-null   float64\n",
            " 10  x10     9968 non-null   float64\n",
            " 11  x11     9968 non-null   object \n",
            " 12  x12     9968 non-null   float64\n",
            " 13  x13     9968 non-null   int64  \n",
            " 14  x14     9968 non-null   int64  \n",
            " 15  x15     9968 non-null   float64\n",
            " 16  x16     9968 non-null   float64\n",
            " 17  x17     9968 non-null   int64  \n",
            " 18  y       9968 non-null   int64  \n",
            "dtypes: float64(12), int64(5), object(2)\n",
            "memory usage: 1.5+ MB\n",
            "None\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df[\"x7\"] = df['x7'].str.replace('$',',',' ').astype(float)\n",
        "df[\"x11\"] = df['x11'].str.replace('%',',',' ').astype(float)\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6ZqpKhJaQruo",
        "outputId": "8b5f77a2-fac8-4f56-d2ba-0b1a25939cb4"
      },
      "execution_count": 186,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-186-f2964a1adce9>:1: FutureWarning: The default value of regex will change from True to False in a future version. In addition, single character regular expressions will *not* be treated as literal strings when regex=True.\n",
            "  df[\"x7\"] = df['x7'].str.replace('$',',',' ').astype(float)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#drop any null values\n",
        "df2=df.dropna(axis=1)"
      ],
      "metadata": {
        "id": "Uy638tJmcMpB"
      },
      "execution_count": 187,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Model**"
      ],
      "metadata": {
        "id": "YEC7165meDX9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x=df2.iloc[:,:18]\n",
        "x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "4GPwHJjM1gPt",
        "outputId": "ee026d23-84ea-4522-981c-112e1dfe80c2"
      },
      "execution_count": 188,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             x0  x1         x2         x3         x4         x5         x6  \\\n",
              "0    -17.933519   6   6.559220 -14.452810  -4.732855   0.381673   2.563194   \n",
              "1    -37.214754   5  10.774930 -15.384004  -0.077339  10.983774 -15.210206   \n",
              "2      0.330441   1 -19.609972  -9.167911   2.064124  12.071688  12.506141   \n",
              "3    -13.709765   1  -8.011390   6.759264   1.727615  -1.768382  24.039733   \n",
              "4     -4.202598   8   7.076210 -26.004919  -4.269696  -3.414224   2.115989   \n",
              "...         ...  ..        ...        ...        ...        ...        ...   \n",
              "9994  -1.967405   0 -25.561679  28.188776   1.150223  -1.887983 -10.482834   \n",
              "9995  41.257961   8  -0.264639  11.293025  -5.768300   4.088754   0.300116   \n",
              "9996  11.431402   8 -28.363664 -35.619430  10.238941   6.494562  -0.407489   \n",
              "9997 -19.039869   1 -20.251227  -3.002298  -1.039843  10.741492 -26.970477   \n",
              "9998 -48.567163   5   5.209877 -43.120062   2.945213   0.804878  -7.292381   \n",
              "\n",
              "              x8         x9         x10       x12  x13  x14        x15  \\\n",
              "0     -89.394348 -28.454044  -16.201298  0.217010    8    4   9.729891   \n",
              "1     153.032652 -32.557736   69.675903 -3.584908    1    3  35.727926   \n",
              "2    -141.437276 -20.794952   55.042604 -3.991366    2    7  -9.283523   \n",
              "3      51.039653  -7.046908  -31.424419  7.908897    1    6  -2.891882   \n",
              "4     -31.046700  19.061182  -31.525515  0.846719    0    7  25.497480   \n",
              "...          ...        ...         ...       ...  ...  ...        ...   \n",
              "9994  203.758763  28.032961  -13.506947  2.840758    9    4 -30.167906   \n",
              "9995   81.247235  32.269791   20.841980 -2.268718    2    6  -7.595250   \n",
              "9996   68.974245 -12.463081    3.114821 -5.195810    0    7   9.583622   \n",
              "9997   82.525340  18.593754  -67.440846  6.179807    2    1   3.873697   \n",
              "9998  256.816776  23.831887  111.781530 -4.626701    9    7   5.290918   \n",
              "\n",
              "           x16  x17  y  \n",
              "0    -0.786431    2  1  \n",
              "1    -0.985552    2  0  \n",
              "2    -3.394718    2  1  \n",
              "3    -2.690222    2  0  \n",
              "4     3.516801    2  1  \n",
              "...        ...  ... ..  \n",
              "9994  0.979618    2  1  \n",
              "9995  0.269051    2  1  \n",
              "9996  1.684282    2  1  \n",
              "9997 -0.525457    2  0  \n",
              "9998  2.453116    1  1  \n",
              "\n",
              "[9968 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-eb152f76-8ab0-4d4d-980b-619d7b6df77d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>x0</th>\n",
              "      <th>x1</th>\n",
              "      <th>x2</th>\n",
              "      <th>x3</th>\n",
              "      <th>x4</th>\n",
              "      <th>x5</th>\n",
              "      <th>x6</th>\n",
              "      <th>x8</th>\n",
              "      <th>x9</th>\n",
              "      <th>x10</th>\n",
              "      <th>x12</th>\n",
              "      <th>x13</th>\n",
              "      <th>x14</th>\n",
              "      <th>x15</th>\n",
              "      <th>x16</th>\n",
              "      <th>x17</th>\n",
              "      <th>y</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-17.933519</td>\n",
              "      <td>6</td>\n",
              "      <td>6.559220</td>\n",
              "      <td>-14.452810</td>\n",
              "      <td>-4.732855</td>\n",
              "      <td>0.381673</td>\n",
              "      <td>2.563194</td>\n",
              "      <td>-89.394348</td>\n",
              "      <td>-28.454044</td>\n",
              "      <td>-16.201298</td>\n",
              "      <td>0.217010</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>9.729891</td>\n",
              "      <td>-0.786431</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-37.214754</td>\n",
              "      <td>5</td>\n",
              "      <td>10.774930</td>\n",
              "      <td>-15.384004</td>\n",
              "      <td>-0.077339</td>\n",
              "      <td>10.983774</td>\n",
              "      <td>-15.210206</td>\n",
              "      <td>153.032652</td>\n",
              "      <td>-32.557736</td>\n",
              "      <td>69.675903</td>\n",
              "      <td>-3.584908</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>35.727926</td>\n",
              "      <td>-0.985552</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.330441</td>\n",
              "      <td>1</td>\n",
              "      <td>-19.609972</td>\n",
              "      <td>-9.167911</td>\n",
              "      <td>2.064124</td>\n",
              "      <td>12.071688</td>\n",
              "      <td>12.506141</td>\n",
              "      <td>-141.437276</td>\n",
              "      <td>-20.794952</td>\n",
              "      <td>55.042604</td>\n",
              "      <td>-3.991366</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>-9.283523</td>\n",
              "      <td>-3.394718</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-13.709765</td>\n",
              "      <td>1</td>\n",
              "      <td>-8.011390</td>\n",
              "      <td>6.759264</td>\n",
              "      <td>1.727615</td>\n",
              "      <td>-1.768382</td>\n",
              "      <td>24.039733</td>\n",
              "      <td>51.039653</td>\n",
              "      <td>-7.046908</td>\n",
              "      <td>-31.424419</td>\n",
              "      <td>7.908897</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>-2.891882</td>\n",
              "      <td>-2.690222</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-4.202598</td>\n",
              "      <td>8</td>\n",
              "      <td>7.076210</td>\n",
              "      <td>-26.004919</td>\n",
              "      <td>-4.269696</td>\n",
              "      <td>-3.414224</td>\n",
              "      <td>2.115989</td>\n",
              "      <td>-31.046700</td>\n",
              "      <td>19.061182</td>\n",
              "      <td>-31.525515</td>\n",
              "      <td>0.846719</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>25.497480</td>\n",
              "      <td>3.516801</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9994</th>\n",
              "      <td>-1.967405</td>\n",
              "      <td>0</td>\n",
              "      <td>-25.561679</td>\n",
              "      <td>28.188776</td>\n",
              "      <td>1.150223</td>\n",
              "      <td>-1.887983</td>\n",
              "      <td>-10.482834</td>\n",
              "      <td>203.758763</td>\n",
              "      <td>28.032961</td>\n",
              "      <td>-13.506947</td>\n",
              "      <td>2.840758</td>\n",
              "      <td>9</td>\n",
              "      <td>4</td>\n",
              "      <td>-30.167906</td>\n",
              "      <td>0.979618</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9995</th>\n",
              "      <td>41.257961</td>\n",
              "      <td>8</td>\n",
              "      <td>-0.264639</td>\n",
              "      <td>11.293025</td>\n",
              "      <td>-5.768300</td>\n",
              "      <td>4.088754</td>\n",
              "      <td>0.300116</td>\n",
              "      <td>81.247235</td>\n",
              "      <td>32.269791</td>\n",
              "      <td>20.841980</td>\n",
              "      <td>-2.268718</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>-7.595250</td>\n",
              "      <td>0.269051</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9996</th>\n",
              "      <td>11.431402</td>\n",
              "      <td>8</td>\n",
              "      <td>-28.363664</td>\n",
              "      <td>-35.619430</td>\n",
              "      <td>10.238941</td>\n",
              "      <td>6.494562</td>\n",
              "      <td>-0.407489</td>\n",
              "      <td>68.974245</td>\n",
              "      <td>-12.463081</td>\n",
              "      <td>3.114821</td>\n",
              "      <td>-5.195810</td>\n",
              "      <td>0</td>\n",
              "      <td>7</td>\n",
              "      <td>9.583622</td>\n",
              "      <td>1.684282</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9997</th>\n",
              "      <td>-19.039869</td>\n",
              "      <td>1</td>\n",
              "      <td>-20.251227</td>\n",
              "      <td>-3.002298</td>\n",
              "      <td>-1.039843</td>\n",
              "      <td>10.741492</td>\n",
              "      <td>-26.970477</td>\n",
              "      <td>82.525340</td>\n",
              "      <td>18.593754</td>\n",
              "      <td>-67.440846</td>\n",
              "      <td>6.179807</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3.873697</td>\n",
              "      <td>-0.525457</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9998</th>\n",
              "      <td>-48.567163</td>\n",
              "      <td>5</td>\n",
              "      <td>5.209877</td>\n",
              "      <td>-43.120062</td>\n",
              "      <td>2.945213</td>\n",
              "      <td>0.804878</td>\n",
              "      <td>-7.292381</td>\n",
              "      <td>256.816776</td>\n",
              "      <td>23.831887</td>\n",
              "      <td>111.781530</td>\n",
              "      <td>-4.626701</td>\n",
              "      <td>9</td>\n",
              "      <td>7</td>\n",
              "      <td>5.290918</td>\n",
              "      <td>2.453116</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>9968 rows × 17 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eb152f76-8ab0-4d4d-980b-619d7b6df77d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-eb152f76-8ab0-4d4d-980b-619d7b6df77d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-eb152f76-8ab0-4d4d-980b-619d7b6df77d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 188
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y = df2['y']\n",
        "y"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sEb2iM0I1yTn",
        "outputId": "a6a6d705-86bf-4ee5-d06c-0ff070be6a0d"
      },
      "execution_count": 189,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       1\n",
              "1       0\n",
              "2       1\n",
              "3       0\n",
              "4       1\n",
              "       ..\n",
              "9994    1\n",
              "9995    1\n",
              "9996    1\n",
              "9997    0\n",
              "9998    1\n",
              "Name: y, Length: 9968, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 189
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "x_train,x_test,y_train,y_test=train_test_split(x,y,train_size=0.9)"
      ],
      "metadata": {
        "id": "_cnOYrV315SU"
      },
      "execution_count": 190,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.naive_bayes import GaussianNB\n",
        "model=GaussianNB()\n"
      ],
      "metadata": {
        "id": "Xk9lypJW4Bfn"
      },
      "execution_count": 191,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model.fit(x_train,y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RwERHls3FMdE",
        "outputId": "e159341a-8641-44ca-ac78-034248acecb1"
      },
      "execution_count": 192,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "GaussianNB()"
            ]
          },
          "metadata": {},
          "execution_count": 192
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x_test[:17]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 646
        },
        "id": "5qulpoFZdBCJ",
        "outputId": "bb2386da-43b9-45ea-f712-08a715eececd"
      },
      "execution_count": 193,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             x0  x1         x2         x3        x4         x5         x6  \\\n",
              "9330  59.360833   6 -32.478920  50.108499  1.136163  15.685960   7.185648   \n",
              "8449  17.981832   7  25.721491 -46.052716 -2.692914   1.625828 -12.603669   \n",
              "7706 -30.291624   5 -13.324931 -16.368553  0.405051   5.372909 -23.956211   \n",
              "2550   6.178999   6 -13.640620 -65.917190  1.213180  -2.747617 -22.087744   \n",
              "990   24.530824   1 -15.442576  36.255659 -3.551862  -2.310917  25.409815   \n",
              "4357 -56.108422   0  -1.840560 -54.996474 -3.122285  16.441981  -8.353957   \n",
              "5799   2.832923   5  -3.514271 -33.987860 -3.940662  10.332009   2.543269   \n",
              "4459  32.268189   6  21.363213  -7.752367  6.048720   6.279695 -18.065041   \n",
              "1560  20.717104  11 -11.844687  11.498281  2.959462  -1.536647 -32.615329   \n",
              "5211  22.386771   5  13.918611  44.789481 -2.291082  17.124661  20.414067   \n",
              "6157  44.397557   6 -13.733788  -8.900492 -8.408606  -5.747438   0.147774   \n",
              "8353   5.691721   1   3.130235 -74.632750 -4.455876   7.926187  -9.632837   \n",
              "2685 -33.619662  11 -13.031996 -36.079917 -0.710925   7.644872 -13.840885   \n",
              "2299  43.062839   5  -5.025843 -53.961228  2.631875 -14.575783  19.854031   \n",
              "6862  22.272439   6 -13.603124  -4.873316  1.246210 -17.454283 -35.888318   \n",
              "6782   8.775010   1 -15.573263  24.972243 -5.489346 -12.695710 -15.923790   \n",
              "4694  59.411623   6 -44.443119  33.850505 -6.739455   8.314847  -3.213839   \n",
              "\n",
              "              x8         x9         x10        x12  x13  x14        x15  \\\n",
              "9330  -75.047555 -10.650901   82.818796  -9.970465    0    4 -34.875792   \n",
              "8449  -41.943843 -33.966287  -81.577606  -0.541409    9    4 -16.070661   \n",
              "7706  -71.514275 -16.431609  -74.518559   0.505523    9    4  -7.072490   \n",
              "2550  150.730991  15.076415  -52.589280   1.852191    2    7   8.504458   \n",
              "990    47.291872  43.232082   -0.313371  13.621780    0    1 -13.289816   \n",
              "4357 -119.853316 -51.562861  -67.828776  -3.381681    2    4  14.169979   \n",
              "5799   93.181263  46.037363   37.666547  -7.240501    1    6   0.061034   \n",
              "4459 -239.648216  34.466749  167.332536   7.362678    0    6 -16.114422   \n",
              "1560  113.695652 -31.599002   78.695536   6.438945    2    4  18.680182   \n",
              "5211  -21.588658  -6.486477    5.998297   3.106696    2    6  -5.101086   \n",
              "6157  159.060518  -3.241379  -21.750113 -14.526003    9    4 -20.304008   \n",
              "8353   15.812913  36.877546   77.317848  -9.482567    9    6  -9.576384   \n",
              "2685   54.163666 -56.818842   25.510004 -11.410069    2    6  22.947461   \n",
              "2299 -190.868424 -14.317998  -51.974067  -0.787234    1    4  -4.060725   \n",
              "6862  153.175463  15.317799   64.201715  -1.790139    2    7 -12.271074   \n",
              "6782  206.187087   0.150622  -29.815243  -9.777060    2    4  14.919766   \n",
              "4694  195.647571  61.139855  -91.382923  -1.788144    9    7 -13.523634   \n",
              "\n",
              "           x16  x17  y  \n",
              "9330  4.368501    1  1  \n",
              "8449  0.585827    2  1  \n",
              "7706 -5.314858    2  1  \n",
              "2550 -3.812606    2  0  \n",
              "990   1.221282    1  1  \n",
              "4357 -1.811941    2  1  \n",
              "5799  1.999976    2  1  \n",
              "4459 -7.215254    1  0  \n",
              "1560 -2.485684    2  0  \n",
              "5211 -3.112646    1  0  \n",
              "6157  2.974565    2  0  \n",
              "8353  1.229398    2  1  \n",
              "2685 -3.901718    2  1  \n",
              "2299  0.039321    2  1  \n",
              "6862 -1.375563    2  0  \n",
              "6782  2.084407    2  0  \n",
              "4694 -4.496270    2  0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a969fa1c-3d43-4fc4-af0c-4712f581585b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>x0</th>\n",
              "      <th>x1</th>\n",
              "      <th>x2</th>\n",
              "      <th>x3</th>\n",
              "      <th>x4</th>\n",
              "      <th>x5</th>\n",
              "      <th>x6</th>\n",
              "      <th>x8</th>\n",
              "      <th>x9</th>\n",
              "      <th>x10</th>\n",
              "      <th>x12</th>\n",
              "      <th>x13</th>\n",
              "      <th>x14</th>\n",
              "      <th>x15</th>\n",
              "      <th>x16</th>\n",
              "      <th>x17</th>\n",
              "      <th>y</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>9330</th>\n",
              "      <td>59.360833</td>\n",
              "      <td>6</td>\n",
              "      <td>-32.478920</td>\n",
              "      <td>50.108499</td>\n",
              "      <td>1.136163</td>\n",
              "      <td>15.685960</td>\n",
              "      <td>7.185648</td>\n",
              "      <td>-75.047555</td>\n",
              "      <td>-10.650901</td>\n",
              "      <td>82.818796</td>\n",
              "      <td>-9.970465</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>-34.875792</td>\n",
              "      <td>4.368501</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8449</th>\n",
              "      <td>17.981832</td>\n",
              "      <td>7</td>\n",
              "      <td>25.721491</td>\n",
              "      <td>-46.052716</td>\n",
              "      <td>-2.692914</td>\n",
              "      <td>1.625828</td>\n",
              "      <td>-12.603669</td>\n",
              "      <td>-41.943843</td>\n",
              "      <td>-33.966287</td>\n",
              "      <td>-81.577606</td>\n",
              "      <td>-0.541409</td>\n",
              "      <td>9</td>\n",
              "      <td>4</td>\n",
              "      <td>-16.070661</td>\n",
              "      <td>0.585827</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7706</th>\n",
              "      <td>-30.291624</td>\n",
              "      <td>5</td>\n",
              "      <td>-13.324931</td>\n",
              "      <td>-16.368553</td>\n",
              "      <td>0.405051</td>\n",
              "      <td>5.372909</td>\n",
              "      <td>-23.956211</td>\n",
              "      <td>-71.514275</td>\n",
              "      <td>-16.431609</td>\n",
              "      <td>-74.518559</td>\n",
              "      <td>0.505523</td>\n",
              "      <td>9</td>\n",
              "      <td>4</td>\n",
              "      <td>-7.072490</td>\n",
              "      <td>-5.314858</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2550</th>\n",
              "      <td>6.178999</td>\n",
              "      <td>6</td>\n",
              "      <td>-13.640620</td>\n",
              "      <td>-65.917190</td>\n",
              "      <td>1.213180</td>\n",
              "      <td>-2.747617</td>\n",
              "      <td>-22.087744</td>\n",
              "      <td>150.730991</td>\n",
              "      <td>15.076415</td>\n",
              "      <td>-52.589280</td>\n",
              "      <td>1.852191</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>8.504458</td>\n",
              "      <td>-3.812606</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>990</th>\n",
              "      <td>24.530824</td>\n",
              "      <td>1</td>\n",
              "      <td>-15.442576</td>\n",
              "      <td>36.255659</td>\n",
              "      <td>-3.551862</td>\n",
              "      <td>-2.310917</td>\n",
              "      <td>25.409815</td>\n",
              "      <td>47.291872</td>\n",
              "      <td>43.232082</td>\n",
              "      <td>-0.313371</td>\n",
              "      <td>13.621780</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>-13.289816</td>\n",
              "      <td>1.221282</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4357</th>\n",
              "      <td>-56.108422</td>\n",
              "      <td>0</td>\n",
              "      <td>-1.840560</td>\n",
              "      <td>-54.996474</td>\n",
              "      <td>-3.122285</td>\n",
              "      <td>16.441981</td>\n",
              "      <td>-8.353957</td>\n",
              "      <td>-119.853316</td>\n",
              "      <td>-51.562861</td>\n",
              "      <td>-67.828776</td>\n",
              "      <td>-3.381681</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>14.169979</td>\n",
              "      <td>-1.811941</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5799</th>\n",
              "      <td>2.832923</td>\n",
              "      <td>5</td>\n",
              "      <td>-3.514271</td>\n",
              "      <td>-33.987860</td>\n",
              "      <td>-3.940662</td>\n",
              "      <td>10.332009</td>\n",
              "      <td>2.543269</td>\n",
              "      <td>93.181263</td>\n",
              "      <td>46.037363</td>\n",
              "      <td>37.666547</td>\n",
              "      <td>-7.240501</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>0.061034</td>\n",
              "      <td>1.999976</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4459</th>\n",
              "      <td>32.268189</td>\n",
              "      <td>6</td>\n",
              "      <td>21.363213</td>\n",
              "      <td>-7.752367</td>\n",
              "      <td>6.048720</td>\n",
              "      <td>6.279695</td>\n",
              "      <td>-18.065041</td>\n",
              "      <td>-239.648216</td>\n",
              "      <td>34.466749</td>\n",
              "      <td>167.332536</td>\n",
              "      <td>7.362678</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>-16.114422</td>\n",
              "      <td>-7.215254</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1560</th>\n",
              "      <td>20.717104</td>\n",
              "      <td>11</td>\n",
              "      <td>-11.844687</td>\n",
              "      <td>11.498281</td>\n",
              "      <td>2.959462</td>\n",
              "      <td>-1.536647</td>\n",
              "      <td>-32.615329</td>\n",
              "      <td>113.695652</td>\n",
              "      <td>-31.599002</td>\n",
              "      <td>78.695536</td>\n",
              "      <td>6.438945</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>18.680182</td>\n",
              "      <td>-2.485684</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5211</th>\n",
              "      <td>22.386771</td>\n",
              "      <td>5</td>\n",
              "      <td>13.918611</td>\n",
              "      <td>44.789481</td>\n",
              "      <td>-2.291082</td>\n",
              "      <td>17.124661</td>\n",
              "      <td>20.414067</td>\n",
              "      <td>-21.588658</td>\n",
              "      <td>-6.486477</td>\n",
              "      <td>5.998297</td>\n",
              "      <td>3.106696</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>-5.101086</td>\n",
              "      <td>-3.112646</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6157</th>\n",
              "      <td>44.397557</td>\n",
              "      <td>6</td>\n",
              "      <td>-13.733788</td>\n",
              "      <td>-8.900492</td>\n",
              "      <td>-8.408606</td>\n",
              "      <td>-5.747438</td>\n",
              "      <td>0.147774</td>\n",
              "      <td>159.060518</td>\n",
              "      <td>-3.241379</td>\n",
              "      <td>-21.750113</td>\n",
              "      <td>-14.526003</td>\n",
              "      <td>9</td>\n",
              "      <td>4</td>\n",
              "      <td>-20.304008</td>\n",
              "      <td>2.974565</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8353</th>\n",
              "      <td>5.691721</td>\n",
              "      <td>1</td>\n",
              "      <td>3.130235</td>\n",
              "      <td>-74.632750</td>\n",
              "      <td>-4.455876</td>\n",
              "      <td>7.926187</td>\n",
              "      <td>-9.632837</td>\n",
              "      <td>15.812913</td>\n",
              "      <td>36.877546</td>\n",
              "      <td>77.317848</td>\n",
              "      <td>-9.482567</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>-9.576384</td>\n",
              "      <td>1.229398</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2685</th>\n",
              "      <td>-33.619662</td>\n",
              "      <td>11</td>\n",
              "      <td>-13.031996</td>\n",
              "      <td>-36.079917</td>\n",
              "      <td>-0.710925</td>\n",
              "      <td>7.644872</td>\n",
              "      <td>-13.840885</td>\n",
              "      <td>54.163666</td>\n",
              "      <td>-56.818842</td>\n",
              "      <td>25.510004</td>\n",
              "      <td>-11.410069</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>22.947461</td>\n",
              "      <td>-3.901718</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2299</th>\n",
              "      <td>43.062839</td>\n",
              "      <td>5</td>\n",
              "      <td>-5.025843</td>\n",
              "      <td>-53.961228</td>\n",
              "      <td>2.631875</td>\n",
              "      <td>-14.575783</td>\n",
              "      <td>19.854031</td>\n",
              "      <td>-190.868424</td>\n",
              "      <td>-14.317998</td>\n",
              "      <td>-51.974067</td>\n",
              "      <td>-0.787234</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>-4.060725</td>\n",
              "      <td>0.039321</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6862</th>\n",
              "      <td>22.272439</td>\n",
              "      <td>6</td>\n",
              "      <td>-13.603124</td>\n",
              "      <td>-4.873316</td>\n",
              "      <td>1.246210</td>\n",
              "      <td>-17.454283</td>\n",
              "      <td>-35.888318</td>\n",
              "      <td>153.175463</td>\n",
              "      <td>15.317799</td>\n",
              "      <td>64.201715</td>\n",
              "      <td>-1.790139</td>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>-12.271074</td>\n",
              "      <td>-1.375563</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6782</th>\n",
              "      <td>8.775010</td>\n",
              "      <td>1</td>\n",
              "      <td>-15.573263</td>\n",
              "      <td>24.972243</td>\n",
              "      <td>-5.489346</td>\n",
              "      <td>-12.695710</td>\n",
              "      <td>-15.923790</td>\n",
              "      <td>206.187087</td>\n",
              "      <td>0.150622</td>\n",
              "      <td>-29.815243</td>\n",
              "      <td>-9.777060</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>14.919766</td>\n",
              "      <td>2.084407</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4694</th>\n",
              "      <td>59.411623</td>\n",
              "      <td>6</td>\n",
              "      <td>-44.443119</td>\n",
              "      <td>33.850505</td>\n",
              "      <td>-6.739455</td>\n",
              "      <td>8.314847</td>\n",
              "      <td>-3.213839</td>\n",
              "      <td>195.647571</td>\n",
              "      <td>61.139855</td>\n",
              "      <td>-91.382923</td>\n",
              "      <td>-1.788144</td>\n",
              "      <td>9</td>\n",
              "      <td>7</td>\n",
              "      <td>-13.523634</td>\n",
              "      <td>-4.496270</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a969fa1c-3d43-4fc4-af0c-4712f581585b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a969fa1c-3d43-4fc4-af0c-4712f581585b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a969fa1c-3d43-4fc4-af0c-4712f581585b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 193
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_test[:17]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iwXQoaUMdWt4",
        "outputId": "2c090030-a167-4610-c148-ee08e1bf25e9"
      },
      "execution_count": 194,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "9330    1\n",
              "8449    1\n",
              "7706    1\n",
              "2550    0\n",
              "990     1\n",
              "4357    1\n",
              "5799    1\n",
              "4459    0\n",
              "1560    0\n",
              "5211    0\n",
              "6157    0\n",
              "8353    1\n",
              "2685    1\n",
              "2299    1\n",
              "6862    0\n",
              "6782    0\n",
              "4694    0\n",
              "Name: y, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 194
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.predict(x_test[:17])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Xck_LRI5dfyH",
        "outputId": "98592aad-0b08-4d8c-9fda-4def3fd88657"
      },
      "execution_count": 195,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0])"
            ]
          },
          "metadata": {},
          "execution_count": 195
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.score(x_test,y_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2kRY_KFBdi2e",
        "outputId": "364e6184-9bc8-4d2b-955b-ad85fa19476b"
      },
      "execution_count": 196,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1.0"
            ]
          },
          "metadata": {},
          "execution_count": 196
        }
      ]
    }
  ]
}